// Generated by CoffeeScript 1.8.0

/*
 * 玩吧的sign参数生成和验证
 */

(function() {
  var crypto, debuglog, helps, makeSignature, request, _;

  debuglog = require("debug")("utils::signature");

  crypto = require('crypto');

  request = require('request');

  _ = require('underscore');

  helps = require("../utils/helps");


  /*
   * 生成签名
   * params:
   *   url: 访问的url(不包含host)
   *   method:访问的方法， 默认GET
   *   params: 访问的参数
   *   exclusive: 不参与计算的参数名。 一般情况只有sig不参与计算（只是默认的，不需要特别指定），但有些api可能会有特殊要求)
   * return sign 字符串（返回""说明签名失败，如参数错误等）
   */

  makeSignature = function(url, method, params, exclusive) {
    var args, digest, str;
    if (method == null) {
      method = "GET";
    }
    if (params == null) {
      params = {};
    }
    if (exclusive == null) {
      exclusive = [];
    }
    if (!((url != null) && _.isString(url) && url.length > 0)) {
      return "";
    }
    if (!((method != null) && _.isString(method) && method.length > 0)) {
      return "";
    }
    if (!((params != null) && _.isObject(params) && !_.isEmpty(params))) {
      return "";
    }
    exclusive || (exclusive = []);
    exclusive.push("sign");
    args = _.omit(params, exclusive);
    str = helps.raw(args);
    str = "" + method + "&" + (encodeURIComponent(url)) + "&" + (encodeURIComponent(str));
    console.log("str: " + str);
    digest = crypto.createHmac('sha1', "" + this.appkey + "&").update(str).digest("base64");
    return digest;
  };

  module.exports = {
    makeSignature: makeSignature
  };

}).call(this);
