// Generated by CoffeeScript 1.8.0

/*
 * 推广类接口
 */

(function() {
  var RequestUrIs, debuglog, getGamebarRanklist, helps, request, setAchievement, _makeReqOptions;

  debuglog = require("debug")("wanba_tools::generalizes");

  request = require('request');

  RequestUrIs = require("../enums/request_uris");

  helps = require("../utils/helps");

  _makeReqOptions = helps.makeReqOptions;


  /*
   * 上传玩家在应用中得等级信息
   * params 同getInfo
   *   user_attr: json {level uint 必须， key1:uint, key2:uint}
   * return {
   *   "ret":0
   *   "is_lost":0
   * }
   *
   */

  setAchievement = function(params, method, callback) {
    var options;
    if (method == null) {
      method = 'POST';
    }
    options = _makeReqOptions(this, RequestUrIs.SET_ACHIEVEMENT_URI, method, params);
    console.dir(options);
    request(options, function(err, res, body) {
      if (err != null) {
        return callback(err);
      }
      if ((body.ret != null) && body.ret !== 0) {
        return callback(new Error("errCode: " + body.ret + " message: " + body.msg));
      }
      return callback(null, body);
    });
  };


  /*
   * 拉取排行榜列表
   * params 同getInfo
   *   rankdim 否  int 拉取纬度，需与排行榜配置信息表中一致
   *   rank_start  否  int 拉取排行的起始位置（默认0）
   *   pull_cnt  否  int 拉取排行的个数（最小为3，最大为50，默认3）
   *   direction 否  int 拉取排行的方向（-1往前拉取，0向后拉取，默认0）
   */

  getGamebarRanklist = function(params, method, callback) {
    var options;
    if (method == null) {
      method = 'POST';
    }
    options = _makeReqOptions(this, RequestUrIs.GET_GAMEBAR_RANKLIST_URI, method, params);
    console.dir(options);
    request(options, function(err, res, body) {
      if (err != null) {
        return callback(err);
      }
      if ((body.ret != null) && body.ret !== 0) {
        return callback(new Error("errCode: " + body.ret + " message: " + body.msg));
      }
      return callback(null, body);
    });
  };

  module.exports = {
    setAchievement: setAchievement,
    getGamebarRanklist: getGamebarRanklist
  };

}).call(this);
